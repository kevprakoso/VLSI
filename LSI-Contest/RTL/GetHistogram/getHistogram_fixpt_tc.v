// -------------------------------------------------------------
// 
// File Name: C:\Users\Kevin Shidqi Prakoso\Documents\VLSI\HDLCoder\codegen\getHistogram\hdlsrc\getHistogram_fixpt_tc.v
// Created: 2016-12-05 13:26:29
// 
// Generated by MATLAB 9.0, MATLAB Coder 3.1 and HDL Coder 3.8
// 
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: getHistogram_fixpt_tc
// Source Path: getHistogram_fixpt_tc
// Hierarchy Level: 1
// 
// Master clock enable input: clk_enable
// 
// enb         : identical to clk_enable
// enb_1_64_0  : 64x slower than clk_enable with last phase
// enb_1_64_1  : 64x slower than clk_enable with phase 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module getHistogram_fixpt_tc
          (
           clk,
           reset,
           clk_enable,
           enb,
           enb_1_64_0,
           enb_1_64_1
          );


  input   clk;
  input   reset;
  input   clk_enable;
  output  enb;
  output  enb_1_64_0;
  output  enb_1_64_1;


  reg [5:0] count64;  // ufix6
  wire phase_all;
  reg  phase_0;
  wire phase_0_tmp;
  reg  phase_1;
  wire phase_1_tmp;


  always @ (posedge clk or posedge reset)
    begin: Counter64
      if (reset == 1'b1) begin
        count64 <= 6'b000001;
      end
      else begin
        if (clk_enable == 1'b1) begin
          if (count64 == 6'b111111) begin
            count64 <= 6'b000000;
          end
          else begin
            count64 <= count64 + 1;
          end
        end
      end
    end // Counter64

  assign  phase_all = clk_enable? 1 : 0;

  always @ (posedge clk or posedge reset)
    begin: temp_process1
      if (reset == 1'b1) begin
        phase_0 <= 1'b0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          phase_0 <= phase_0_tmp;
        end
      end
    end // temp_process1

  assign  phase_0_tmp = (count64 == 6'b111111 && clk_enable == 1'b1)? 1 : 0;

  always @ (posedge clk or posedge reset)
    begin: temp_process2
      if (reset == 1'b1) begin
        phase_1 <= 1'b1;
      end
      else begin
        if (clk_enable == 1'b1) begin
          phase_1 <= phase_1_tmp;
        end
      end
    end // temp_process2

  assign  phase_1_tmp = (count64 == 6'b000000 && clk_enable == 1'b1)? 1 : 0;

  assign enb =  phase_all & clk_enable;

  assign enb_1_64_0 =  phase_0 & clk_enable;

  assign enb_1_64_1 =  phase_1 & clk_enable;


endmodule  // getHistogram_fixpt_tc

